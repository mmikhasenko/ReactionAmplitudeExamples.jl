---
title: Phase-space variables for the Central production
author: Misha Mikhasenko
date: 26th November 2019
options:
    dpi : 200
    fig_env : "figure"
    fig_ext : ".pdf"
    out_width : "1.0\\textwidth"
---

# Statement of the problem

The three-body phase-space needs to be worked out in variables $s_1$, $s_2$, $t_1$, $t_2$.

# Derivation

I start from the expression
$$
\newcommand{\diff}{\mathrm{d}}
\begin{align}
    \diff \Phi_3 = \frac{\diff s_1}{2\pi}
        \frac{\diff \cos\theta_1\,\diff \phi_1}{4\pi} \frac{\lambda^{1/2}(s_0,s_1,m_p^2)}{(8\pi)s_0} \,
        \frac{\diff \cos\theta_{23}\,\diff \phi_{23}}{4\pi} \frac{\lambda^{1/2}(s_1,m_2^2,m_3^2)}{(8\pi)s_1}
\end{align}
$$
and make a sequential replacements of variables: $\theta_1\to t_2$, $\theta_{23}\to t_1$, $\phi_{23}\to s_2$,
using relations between variables derived in the GJ frame.

Subtleties:
 - I assume that nothing depends on $\phi_1$. It is true unless the beam/target particle is polarized.
 - The relation between $\phi_{23}$ and $s_2$ are twofold, i.e. $s_2 = s_2(\cos\phi_{23})$. To proceed, I assume that
   the full amplitude has only $\cos\phi_{23}$ dependence, i.e. the phase space integral of $\phi_{23} in [-\pi,\pi]$ can be reduced
   to twice the integral in the range $[0,\pi]$. The relation between $\phi_{23}$ and $s_2$ is unambigues, then.

# The final answer

$$
\begin{align}
    \diff\Phi_3 = \frac{2}{(2\pi)^2 (8\pi)^2} \frac{\diff s_1 \diff s_2 \diff t_1 \diff t_2}{\lambda^{1/2}(s_0,m_1^2,m_2^2) W^{1/2}(s_1,s_2,t_1,t_2)}
\end{align}
$$
with $\lambda^{1/2}(x,y,z) = x^2+y^2+z^2-2xy-2yz-2zx$, and $W(s_1,s_2,t_1,t_2)$ being a polynomial in the variable,
$$
\begin{align}
W(s_1,s_2,t_1,t_2) &= -m_2^4 m_c^4 - 2 m_2^4 m_c^2 m_1^2 + 2 m_2^4 m_c^2 s_1 + 2 m_2^4 m_c^2 t_1 - m_2^4 m_1^4 + 2 m_2^4 m_1^2 s_1 \\ \nonumber
&\quad + 2 m_2^4 m_1^2 t_1 + 4 m_2^4 m_1^2 t_2 - m_2^4 s_1^2 - 2 m_2^4 s_1 t_1 - m_2^4 t_1^2 + 2 m_2^2 m_c^4 m_1^2 \\ \nonumber
&\quad + 2 m_2^2 m_c^4 s_0 - 2 m_2^2 m_c^2 m_1^4 + 2 m_2^2 m_c^2 m_1^2 s_0 + 2 m_2^2 m_c^2 m_1^2 s_1 + 2 m_2^2 m_c^2 m_1^2 s_2 \\ \nonumber
&\quad - 2 m_2^2 m_c^2 m_1^2 t_1 - 2 m_2^2 m_c^2 m_1^2 t_2 - 2 m_2^2 m_c^2 s_0 s_1 - 4 m_2^2 m_c^2 s_0 t_1 - 2 m_2^2 m_c^2 s_0 t_2 \\ \nonumber
&\quad - 2 m_2^2 m_c^2 s_1 s_2 - 2 m_2^2 m_c^2 s_1 t_1 + 2 m_2^2 m_c^2 s_2 t_2 + 2 m_2^2 m_1^4 s_2 + 4 m_2^2 m_1^4 t_1 \\ \nonumber
&\quad + 2 m_2^2 m_1^4 t_2 - 2 m_2^2 m_1^2 s_0 t_1 - 2 m_2^2 m_1^2 s_0 t_2 - 4 m_2^2 m_1^2 s_1 s_2 - 6 m_2^2 m_1^2 s_1 t_1 \\ \nonumber
&\quad - 2 m_2^2 m_1^2 s_1 t_2 - 2 m_2^2 m_1^2 s_2 t_1 - 6 m_2^2 m_1^2 s_2 t_2 - 2 m_2^2 m_1^2 t_1 t_2 + 2 m_2^2 s_0 s_1 t_1 \\ \nonumber
&\quad + 2 m_2^2 s_0 s_1 t_2 + 2 m_2^2 s_0 t_1^2 - 2 m_2^2 s_0 t_1 t_2 + 2 m_2^2 s_1^2 s_2 + 2 m_2^2 s_1^2 t_1 + 2 m_2^2 s_1 s_2 t_1 \\ \nonumber
&\quad - 2 m_2^2 s_1 s_2 t_2 + 2 m_2^2 s_1 t_1^2 + 2 m_2^2 s_2 t_1 t_2 - m_c^4 m_1^4 + 2 m_c^4 m_1^2 s_0 - m_c^4 s_0^2 \\ \nonumber
&\quad + 2 m_c^2 m_1^4 s_2 + 2 m_c^2 m_1^4 t_2 - 2 m_c^2 m_1^2 s_0 s_2 - 2 m_c^2 m_1^2 s_0 t_1 - 4 m_c^2 m_1^2 s_0 t_2 \\ \nonumber
&\quad - 2 m_c^2 m_1^2 s_1 s_2 + 2 m_c^2 m_1^2 s_1 t_1 - 2 m_c^2 m_1^2 s_2 t_2 + 2 m_c^2 s_0^2 t_1 + 2 m_c^2 s_0^2 t_2 \\ \nonumber
&\quad + 2 m_c^2 s_0 s_1 s_2 - 2 m_c^2 s_0 s_1 t_1 - 2 m_c^2 s_0 s_2 t_2 + 4 m_c^2 s_0 t_1 t_2 - m_1^4 s_2^2 - 2 m_1^4 s_2 t_2 \\ \nonumber
&\quad - m_1^4 t_2^2 + 2 m_1^2 s_0 s_2 t_1 + 2 m_1^2 s_0 s_2 t_2 - 2 m_1^2 s_0 t_1 t_2 + 2 m_1^2 s_0 t_2^2 + 2 m_1^2 s_1 s_2^2 \\ \nonumber
&\quad - 2 m_1^2 s_1 s_2 t_1 + 2 m_1^2 s_1 s_2 t_2 + 2 m_1^2 s_1 t_1 t_2 + 2 m_1^2 s_2^2 t_2 + 2 m_1^2 s_2 t_2^2 - s_0^2 t_1^2 \\ \nonumber
&\quad + 2 s_0^2 t_1 t_2 - s_0^2 t_2^2 - 2 s_0 s_1 s_2 t_1 - 2 s_0 s_1 s_2 t_2 + 2 s_0 s_1 t_1^2 - 2 s_0 s_1 t_1 t_2 \\ \nonumber
&\quad - 2 s_0 s_2 t_1 t_2 + 2 s_0 s_2 t_2^2 - s_1^2 s_2^2 + 2 s_1^2 s_2 t_1 - s_1^2 t_1^2 + 2 s_1 s_2^2 t_2 - 2 s_1 s_2 t_1 t_2 - s_2^2 t_2^2
\end{align}
$$

# Numerical implementation


Here is the expression to be copied to the code directly.
```julia; results="hidden"
W(s0,s1,s2,t1,t2,m1sq,m2sq,mcsq) = -m2sq^2*mcsq^2 - 2*m2sq^2*mcsq*m1sq + 2*m2sq^2*mcsq*s1 + 2*m2sq^2*mcsq*t1 - m2sq^2*m1sq^2 + 2*m2sq^2*m1sq*s1 + 2*m2sq^2*m1sq*t1 + 4*m2sq^2*m1sq*t2 - m2sq^2*s1^2 - 2*m2sq^2*s1*t1 - m2sq^2*t1^2 + 2*m2sq*mcsq^2*m1sq + 2*m2sq*mcsq^2*s0 - 2*m2sq*mcsq*m1sq^2 + 2*m2sq*mcsq*m1sq*s0 + 2*m2sq*mcsq*m1sq*s1 + 2*m2sq*mcsq*m1sq*s2 - 2*m2sq*mcsq*m1sq*t1 - 2*m2sq*mcsq*m1sq*t2 - 2*m2sq*mcsq*s0*s1 - 4*m2sq*mcsq*s0*t1 - 2*m2sq*mcsq*s0*t2 - 2*m2sq*mcsq*s1*s2 - 2*m2sq*mcsq*s1*t1 + 2*m2sq*mcsq*s2*t2 + 2*m2sq*m1sq^2*s2 + 4*m2sq*m1sq^2*t1 + 2*m2sq*m1sq^2*t2 - 2*m2sq*m1sq*s0*t1 - 2*m2sq*m1sq*s0*t2 - 4*m2sq*m1sq*s1*s2 - 6*m2sq*m1sq*s1*t1 - 2*m2sq*m1sq*s1*t2 - 2*m2sq*m1sq*s2*t1 - 6*m2sq*m1sq*s2*t2 - 2*m2sq*m1sq*t1*t2 + 2*m2sq*s0*s1*t1 + 2*m2sq*s0*s1*t2 + 2*m2sq*s0*t1^2 - 2*m2sq*s0*t1*t2 + 2*m2sq*s1^2*s2 + 2*m2sq*s1^2*t1 + 2*m2sq*s1*s2*t1 - 2*m2sq*s1*s2*t2 + 2*m2sq*s1*t1^2 + 2*m2sq*s2*t1*t2 - mcsq^2*m1sq^2 + 2*mcsq^2*m1sq*s0 - mcsq^2*s0^2 + 2*mcsq*m1sq^2*s2 + 2*mcsq*m1sq^2*t2 - 2*mcsq*m1sq*s0*s2 - 2*mcsq*m1sq*s0*t1 - 4*mcsq*m1sq*s0*t2 - 2*mcsq*m1sq*s1*s2 + 2*mcsq*m1sq*s1*t1 - 2*mcsq*m1sq*s2*t2 + 2*mcsq*s0^2*t1 + 2*mcsq*s0^2*t2 + 2*mcsq*s0*s1*s2 - 2*mcsq*s0*s1*t1 - 2*mcsq*s0*s2*t2 + 4*mcsq*s0*t1*t2 - m1sq^2*s2^2 - 2*m1sq^2*s2*t2 - m1sq^2*t2^2 + 2*m1sq*s0*s2*t1 + 2*m1sq*s0*s2*t2 - 2*m1sq*s0*t1*t2 + 2*m1sq*s0*t2^2 + 2*m1sq*s1*s2^2 - 2*m1sq*s1*s2*t1 + 2*m1sq*s1*s2*t2 + 2*m1sq*s1*t1*t2 + 2*m1sq*s2^2*t2 + 2*m1sq*s2*t2^2 - s0^2*t1^2 + 2*s0^2*t1*t2 - s0^2*t2^2 - 2*s0*s1*s2*t1 - 2*s0*s1*s2*t2 + 2*s0*s1*t1^2 - 2*s0*s1*t1*t2 - 2*s0*s2*t1*t2 + 2*s0*s2*t2^2 - s1^2*s2^2 + 2*s1^2*s2*t1 - s1^2*t1^2 + 2*s1*s2^2*t2 - 2*s1*s2*t1*t2 - s2^2*t2^2
```
